name: Preview Deploy

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: preview-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      ready: ${{ steps.check.outputs.ready }}
    steps:
      - id: check
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          if [ -n "$VERCEL_TOKEN" ] && [ -n "$VERCEL_ORG_ID" ] && [ -n "$VERCEL_PROJECT_ID" ]; then
            echo "ready=true" >> "$GITHUB_OUTPUT"
          else
            echo "ready=false" >> "$GITHUB_OUTPUT"
          fi

  vercel-preview:
    name: Deploy Preview to Vercel
    needs: precheck
    if: ${{ needs.precheck.outputs.ready == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Vercel Pull (fetch preview env)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: npx vercel pull --yes --environment=preview --token="$VERCEL_TOKEN" --scope="$VERCEL_ORG_ID"

      - name: Build (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel build --token="$VERCEL_TOKEN"

      - name: Deploy Preview
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          url=$(npx vercel deploy --prebuilt --token="$VERCEL_TOKEN")
          echo "url=$url" >> "$GITHUB_OUTPUT"

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.deploy.outputs.url }}`;
            const body = `Preview deployed to: ${url}`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body,
            });

  # Helper job to provide guidance if secrets are missing
  setup-hint:
    needs: precheck
    if: ${{ needs.precheck.outputs.ready != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Preview disabled (missing secrets)
        run: |
          echo "Preview deployment skipped. Configure repository secrets VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID to enable."
